# Default values for ml-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/intelops/optimizer/ml-server
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: ghrc-regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "ml-server"
  rbac:
    create: true

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

env:
  loggingLevel: info
  serverAddress: "ml-server.ml-server.svc.cluster.local"
  version: "latest"
  retryLimit: 3
  sleepInterval: 5s
  create_db_cassandra:
    image: "create_db_cassandra"
    db_address: "cassandra.cassandra.svc.cluster.local"
    db_admin_username: cassandra
    db_admin_password: cassandra
    db_name: ml_server
    replication_factor: "'datacenter1': 1"
    service_db_username: ml_server
    service_db_password: ml_server
  migrate_db_cassandra:
    image: "migrate_db_cassandra"
    db_type: "cassandra"
    db_address: "cassandra.cassandra.svc.cluster.local"
    db_name: "ml_server"
    service_db_username: "ml_server"
    service_db_password: "ml_server"
  docker:
    secret_name: ghrc-regcred
    namespace: ml-server
  ml_data_collector:
    image: "ghcr.io/intelops/optimizer/ml-data-collector:latest"
    domian: "alpha.optimizor.app"
  ml_model:
    image: "ghcr.io/intelops/ml-model/develop:6239555216"
    train_image: "ghcr.io/intelops/ml-model/train/develop:6239555221"
    is_integrated: true
  ml_agent:
    is_integrated: true
  auth:
    enabled: false

opentelemetry:
  url: "otelcollector.dev.optimizor.app:80"
  insecure: true
  appName: "ML_Server"
  isEnabled: true

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 64Mi

istio:
  enabled: true
  host: ml-server.local
  istio_gateway: "intelops/intelops-gateway"

cerbos:
  url: "cerbos:3592"
  userName: cerbos
  entityName: cerbos

ory:
  credIdentifier: mlserver
  entityName: ory

iam:
  address: iam:9091

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ml-server.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

db:
  #  name: Cassandra
  name: Aster

asterDB:
  dbId: Test1234
  region: us-east1
  keyspace: ml_server
  credidentifier: authToken
  entityname: astra
vault:
  address: http://vault:8200
  role: "vault-role-mlserver"
  policyNames: "vault-policy-cluster-admin,vault-policy-cluster-read"
  authMount: "kubernetes"

aws:
  access_key: ""
  secret_key: ""
  region_name: ""
  existingSecret: ""
