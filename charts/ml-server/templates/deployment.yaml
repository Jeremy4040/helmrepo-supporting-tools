apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ml-server.fullname" . }}
  labels:
    {{- include "ml-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ml-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ml-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ml-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if eq .Values.db.name "Cassandra" }}
      initContainers:
        - name: {{ .Chart.Name }}-create-db
          image: "{{ .Values.image.repository }}/{{ .Values.env.create_db_cassandra.image }}:{{ .Values.env.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_ADDRESSES
              value: {{ .Values.env.create_db_cassandra.db_address }}
            - name: DB_ADMIN_USERNAME
              value: {{ .Values.env.create_db_cassandra.db_admin_username }}
            - name: DB_ADMIN_PASSWD
              value: {{ .Values.env.create_db_cassandra.db_admin_password }}
            - name: DB_NAME
              value: {{ .Values.env.create_db_cassandra.db_name }}
            - name: DB_REPLICATION_FACTOR
              value: {{ .Values.env.create_db_cassandra.replication_factor | quote }}
            - name: DB_SERVICE_USERNAME
              value: {{ .Values.env.create_db_cassandra.service_db_username }}
            - name: DB_SERVICE_PASSWD
              value: {{ .Values.env.create_db_cassandra.service_db_password }}


          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
        - name: {{ .Chart.Name }}-migrate-db
          image: "{{ .Values.image.repository }}/{{ .Values.env.migrate_db_cassandra.image }}:{{ .Values.env.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_TYPE
              value: {{ .Values.env.migrate_db_cassandra.db_type }}
            - name: DB_DSN
              value: {{ .Values.env.migrate_db_cassandra.db_address }}
            - name: DB_NAME
              value: {{ .Values.env.migrate_db_cassandra.db_name }}
            - name: DB_USERNAME
              value: {{ .Values.env.migrate_db_cassandra.service_db_username }}
            - name: DB_PASSWD
              value: {{ .Values.env.migrate_db_cassandra.service_db_password}}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "ml-server.fullname" . }}-configmap
            - secretRef:
                {{- if not .Values.aws.existingSecret }}
                name: {{ include "ml-server.fullname" . }}-secret
                {{- else if and .Values.aws.existingSecret }}
                name: {{ .Values.aws.existingSecret }}
                {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
